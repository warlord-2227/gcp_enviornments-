name: Deploy Google Cloud Function

on:
  push:
    branches:
      - dev
      - test
      - prod
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Install Python Dependencies
      run: pip install -r src/requirements.txt
      working-directory: ${{ github.workspace }}

    - name: Package the Cloud Function
      run: |
        cd src
        zip -r function.zip .
        mv functions.zip terraform/
      
  
    - name: Check current directory and list files
      run: |
        pwd
        ls -la

    - name: Generate MD5 hash of the function code
      run: md5sum function.zip | awk '{print $1}' > function.zip.md5
      working-directory: terraform
    
    - name: Print MD5 hash
      run: cat function.zip.md5
      working-directory: terraform

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: "1.7.5"
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
    
    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        version: 'latest'
      env:
        GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}   
        
    - name: Verify GCloud Auth
      run: gcloud auth list   
    
    - name: Write GCP Key to File
      run: echo '${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}' > ${{ github.workspace }}/gcp_key.json
    
    - name: Create terraform.rc file for Terraform Cloud Credentials
      run: |
        echo "credentials \"app.terraform.io\" {" > ${{ github.workspace }}/terraform.rc
        echo "  token = \"${{ secrets.TF_API_TOKEN }}\"" >> ${{ github.workspace }}/terraform.rc
        echo "}" >> ${{ github.workspace }}/terraform.rc
      
    - name: Authenticate with Google Cloud
      env:
        GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
      run: gcloud auth activate-service-account --key-file="${{ github.workspace }}/gcp_key.json"

    - name: Debug Workspace Name
      run: |
        echo "Workspace name to be used: ${{ github.ref_name }}"
      working-directory: terraform

    
    - name: Terraform Init
      run: terraform init
        
      working-directory: terraform
      env:
        TF_INPUT: false

    - name: Terraform Plan
      run: |
          gcp_credentials=$(cat ${{ github.workspace }}/gcp_key.json)
          terraform plan -var="google_credentials=${gcp_credentials}" 
      working-directory: terraform
      env:
          TF_CLI_CONFIG_FILE: ${{ github.workspace }}/terraform.rc

    - name: Terraform Apply
      if: github.ref == 'refs/heads/prod' || github.ref == 'refs/heads/test'
      run: |
          gcp_credentials=$(cat ${{ github.workspace }}/gcp_key.json)
          terraform apply -auto-approve -var="google_credentials=${gcp_credentials}" 
      working-directory: terraform
      env:
        TF_CLI_CONFIG_FILE: ${{ github.workspace }}/terraform.rc
        GOOGLE_APPLICATION_CREDENTIALS: ${{ github.workspace }}/gcp_key.json

    - name: List Terraform State
      run: terraform state list
      working-directory: terraform

    - name: Cleanup Artifacts
      run: rm -f terraform/hello-pubsub.zip
